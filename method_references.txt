Method Reference
================
A method reference is the simplified syntax used for a lambda expression 
that executes just ONE method.
Consumer<String> c = s -> System.out.println(s);    //lambda expression
Consumer<String> c = System.out::println;           //method reference


Method References - Types
=========================
1. Reference to a static method
----------------------------
Ex - ContainingClass::staticMethodName
Syntax - Class::staticMethodName

interface Sayable{  
    void say();  
}  
public class MethodReference {  
    public static void saySomething(){  
        System.out.println("Hello, this is static method.");  
    }  
    public static void main(String[] args) {  
        // Referring static method  
        Sayable sayable = MethodReference::saySomething;  
        // Calling interface method  
        sayable.say();  
    }  
} 
----------------------------------------------------------------
public class MethodReference2 {  
    public static void ThreadStatus(){  
        System.out.println("Thread is running...");  
    }  
    public static void main(String[] args) {  
        Thread t2=new Thread(MethodReference2::ThreadStatus);  
        t2.start();       
    }  
}

2. Reference to an instance method of a particular object
------------------------------------------------------
Ex - containingObject::instanceMethodName
Syntax - object::instanceMethodName

3. Reference to an instance method of an arbitrary object of a particular type
---------------------------------------------------------------------------
Ex - ContainingType::methodName
Syntax - Class::instanceMethodName

4. Reference to a constructor
--------------------------
Ex - ClassName::new
Syntax - ClassName::new

interface Messageable{  
    Message getMessage(String msg);  
}  
class Message{  
    Message(String msg){  
        System.out.print(msg);  
    }  
}  
public class ConstructorReference {  
    public static void main(String[] args) {  
        Messageable hello = Message::new;  
        hello.getMessage("Hello");  
    }  
}


Summary:
========
Instead of using an Anonymous Class,
we can use a Lambda Expression.
And if this just calls one method, we can use
a Method Reference